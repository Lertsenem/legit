#!/bin/bash
########################################
# Project :	LEGIT
#
# Description :	This script uses a file in parameter to import
#		each and every code from the LEGIFRANCE website.
#
# Author :	Lertsenem	<lertsenem@yahoo.fr>
########################################

# PRELIMINARY CHECKS
########################################
[ -n "$2" ] || exit 1

# ARGUMENTS
########################################
ARG_LOC_CODESLISTFILE="$1"
ARG_LOC_IMPORTCODESCRIPT="$2"
ARG_PARALLELIZE="$3"

# CHECK the arguments
[ -n "$ARG_LOC_CODESLISTFILE" ] || _usage
[ -n "$ARG_LOC_IMPORTCODESCRIPT" ] || _usage
[ -n "$ARG_PARALLELIZE" ] || ARG_PARALLELIZE=""

# GLOBAL VARIABLES
########################################
_LOC_ERRFILENAME="missing"

_RV_USAGE=254
_MSG_USAGE="$0 <CodesListFile> <ImportCodeScript> [<Parallelize>]"

LEGIFRANCE_ROOTURL="http://www.legifrance.gouv.fr"
LEGIFRANCE_GETCODEURL="$LEGIFRANCE_ROOTURL/affichCode.do?"

# FUNCTIONS
########################################

#
# Description :	_exit() wrapper
#
# Arguments :	-
#
# Returns :	exits
#
# ======================================
_usage()
{
	_exit "$_RV_USAGE" "$_MSG_USAGE"
} # _usage

#
# Description :	Exit the program
#
# Arguments :	
#
# Returns :	exits
#
# ======================================
_exit()
{
	# Arguments
	local arg_rv="$1"
	local arg_msg="$2"

	# CHECK the arguments
	[ -z "$arg_rv" ] && arg_rv=0

	# Print the message
	[ -n "$arg_msg" ] && echo "$arg_msg"

	# Exit.
	exit "$arg_rv"
} # _exit


#
# Description :	
#
# Arguments :	
#
# Returns :	
#
# ======================================
_legit_import_treatLine()
{
	# Arguments
	local arg_codeID="$1"
	local arg_codeName="$2"

	# Local variables
	local lv_url="$LEGIFRANCE_GETCODEURL"

	# Create the directory
	[ -w . ] || return 1
	mkdir "$arg_codeName"

	# Create the URL
	lv_url="${lv_url}cidTexte=${arg_codeID}&dateTexte=$(date +%Y%m%d)"

	# Go in the Code directory
	cd "$arg_codeName"

	# Do the import !
	if [ -n "$ARG_PARALLELIZE" ]; then
		python $ARG_LOC_IMPORTCODESCRIPT "$lv_url" >> "$_LOC_ERRFILENAME" &
	else
		python $ARG_LOC_IMPORTCODESCRIPT "$lv_url" >> "$_LOC_ERRFILENAME"
	fi

	# Move up
	cd ..

	# OK.
	return 0
}

# SCRIPT
########################################

while read line; do
	_legit_import_treatLine $line
done < "$ARG_LOC_CODESLISTFILE"

exit 0
